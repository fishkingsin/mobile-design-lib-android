plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish' // Apply this plugin at the top of your library build.gradle
}

// def githubProperties = new Properties()
// githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file

def getVersionName = { ->
    return "0.0.1" // Replace with version Name
}

def getArtificatId = { ->
    return "mobiledesign" // Replace with library name ID
}

publishing {
    publications {
        AndroidRelease(MavenPublication) {
            groupId 'com.nmg.mobile.design' // Replace with group ID
            artifactId getArtificatId()
            version getVersionName()
            // https://github.com/gradle/gradle/issues/3635
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release-${getVersionName()}.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
                    {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "mobile-design-lib-android"

            url = uri("https://api.bitbucket.org/2.0/repositories/$REPOSITORY_OWNER/$REPOSITORY_NAME/raw/releases")
//            credentials {
//                username "$mavenUser"
//                password "$mavenPassword"
//            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}



android {
    namespace 'com.nmg.mobile.design'
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.libraryVariants.all { variant ->
        variant.outputs.all { output ->
            if (output != null && outputFileName.endsWith('.aar')) {
                outputFileName = "${getArtificatId()}-${variant.name}-${getVersionName()}.aar"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
apply from: '../dependencies.gradle'
dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

apply from: '../ktlint.gradle'
check.dependsOn ktlint
